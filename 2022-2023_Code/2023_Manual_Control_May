/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       Riley Stevens, Edward Zhou                                */
/*    Created:      Mon Dec 05 2022                                           */
/*    Description:  Code to control the robot. The robot utilizes an H-drive  */
/* design with mecanum wheels, a twin motor flywheel, and a motor for the     */
/* intake.                                                                    */
/*                                                                            */
/*----------------------------------------------------------------------------*/

// ---- START VEXCODE CONFIGURED DEVICES ----
// Robot Configuration:
// [Name]               [Type]        [Port(s)]
// Motor1               motor         1               
// Motor2               motor         2               
// Motor3               motor         3               
// Motor4               motor         4               
// Controller1          controller                    
// Flywheel1            motor         5               
// Flywheel2            motor         6               
// ColorRoller          motor         7               
// Motor8               motor         8               
// ---- END VEXCODE CONFIGURED DEVICES ----

#include "vex.h"

using namespace vex;
competition Competition;

//  ______________
// |1            3|
// |              |   ^
// |              |  /|\
// |              |   |
// |              |   |
// |2____________4|
//

bool toggle = false;

// Manual control of robot
void ManualControl() {
  // initate vexcode
  vexcodeInit();

  while (true) {

    // the following three variables read the position of the two axes of the
    //  right stick and the x axis of the left stick

    // right stick, left - right
    double LeftRight = Controller1.Axis1.position(percent);
    // right stick, up - down
    double UpDown = Controller1.Axis2.position(percent);
    // left stick, left - right
    double Turn = Controller1.Axis4.position(percent);

    // Next four lines of code determine the movement of the mecanum wheels in
    //  accordance to the three variables used above.

    // Motor 1 is positioned in the left-front of the robot
    Motor1.spin(forward, (UpDown + LeftRight + Turn), percent);

    // Motor 2 is positioned in the left-back of the robot
    Motor2.spin(forward, (UpDown - LeftRight + Turn), percent);

    // Motor 3 is positioned in the right-front of the robot
    Motor3.spin(forward, (UpDown - LeftRight - Turn), percent);

    // Motor 4 is positioned in the back-front of the robot
    Motor4.spin(forward, (UpDown + LeftRight - Turn), percent);

    // Flywheel1.spin(forward, 100, percent);
    // Flywheel2.spin(forward, 100, percent);

    // When A is pressed, toggle a boolean to either activate or deactivate the
    //  flywheel
    if (Controller1.ButtonA.pressing()) {
      if (toggle) {
        Flywheel1.spin(forward, 300, rpm);
        Flywheel2.spin(forward, 300, rpm);
        toggle = false;
      } else {
        Flywheel1.stop();
        Flywheel2.stop();
        toggle = true;
      }
      // wait 0.1 seconds to decrease chance of flywheel button being read too
      //  many times in a small amount of time
      vex::task::sleep(100);
    }

    // If the B button is being held, the color roller motor begins turning
    if (Controller1.ButtonL1.pressing()) {

      ColorRoller.spin(forward, 50, percent);

      // If the B button is released, the color roller motor stops turning
    } else {
      ColorRoller.stop();
    }
    // Motor 8 refers to the intake motor that controls both the intake device
    //  and the conveyor belt that moves disks to the flywheel
    // If button Right1 is held, intake motor begins turning forward
    if (Controller1.ButtonR1.pressing()) {

      Motor8.spin(reverse, 50, percent);

     // If button Right2q is held, intake motor begins turning backward 
    } else if(Controller1.ButtonR2.pressing()){
      Motor8.spin(forward,50,percent);
      // If button right1 & right2 is released, intake motor stops turning
    }else {
      Motor8.stop();
    }
  }
}

// Precondition: Robot in position before autonomous activated and disks loaded
// Postcondition: Robot has spun around to face a goal and shoots loaded disks
// into the flywheel

void moveForward(int i){

  
  Motor1.spin(reverse, 50, percent);
  Motor2.spin(reverse, 50, percent);
  Motor3.spin(reverse, 50, percent);
  Motor4.spin(reverse, 50, percent);

  vex::task::sleep(i);

  Motor1.stop();
  Motor2.stop();
  Motor3.stop();
  Motor4.stop();

    
}
void moveBackward(int i){

  
  Motor1.spin(forward, 50, percent);
  Motor2.spin(forward, 50, percent);
  Motor3.spin(forward, 50, percent);
  Motor4.spin(forward, 50, percent);


    
}
void StrafeLeft(){
  
  
  Motor1.spin(reverse, 50, percent);
  Motor2.spin(forward, 50, percent);
  Motor3.spin(forward, 50, percent);
  Motor4.spin(reverse, 50, percent);
vex::task::sleep(1500);

  Motor1.stop();
  Motor2.stop();
  Motor3.stop();
  Motor4.stop();
  
}
void StrafeRight(){
  
  
  Motor1.spin(forward, 50, percent);
  Motor2.spin(reverse, 50, percent);
  Motor3.spin(reverse, 50, percent);
  Motor4.spin(forward, 50, percent);
vex::task::sleep(2000);

  Motor1.stop();
  Motor2.stop();
  Motor3.stop();
  Motor4.stop();
  
}
void TurnLeft(){
  
  
  Motor1.spin(reverse, 50, percent);
  Motor2.spin(reverse, 50, percent);
  Motor3.spin(forward, 50, percent);
  Motor4.spin(forward, 50, percent);

  vex::task::sleep(1000);

  Motor1.stop();
  Motor2.stop();
  Motor3.stop();
  Motor4.stop();
  
}
void Autonomous() {
  /*
  Move forward, run color roller, turn left to face low goal, shoot two discs from low position
  */
  
  // Spins robot to the left
  
  // Turn();
  StrafeLeft();
  ColorRoller.spin(forward, 10, percent);
  moveBackward(0);
  vex::task::sleep(400);

  Motor1.stop();
  Motor2.stop();
  Motor3.stop();
  Motor4.stop();

  vex::task::sleep(200);

  ColorRoller.stop();
  moveForward(200);
  StrafeRight();
  TurnLeft();

  Flywheel1.spin(forward, 100, percent);
  Flywheel2.spin(forward, 100, percent);
  Motor8.spin(reverse, 50, percent);

  // // Activates flywheels
  // Flywheel1.spin(forward, 150, percent);
  // Flywheel2.spin(forward, 150, percent);

  // // Intake moves disks into flywheel
  // Motor8.spin(reverse, 100, percent);
}

// Main function
// Holds code activation for the manual driver control and the autonomous code
int main() {
  Competition.drivercontrol(ManualControl);
  Competition.autonomous(Autonomous);
}
